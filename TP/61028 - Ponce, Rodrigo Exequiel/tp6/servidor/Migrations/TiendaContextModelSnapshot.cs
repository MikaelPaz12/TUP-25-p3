// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using servidor.Modelos;

#nullable disable

namespace servidor.Migrations
{
    [DbContext(typeof(TiendaContext))]
    partial class TiendaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("servidor.Modelos.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("servidor.Modelos.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemsCompra");
                });

            modelBuilder.Entity("servidor.Modelos.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Talle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagenUrl = "BAGGY.jpg",
                            Nombre = "BAGGY HACK CLEAR",
                            Precio = 80000m,
                            Stock = 20,
                            Talle = "S, M, L, XL"
                        },
                        new
                        {
                            Id = 2,
                            ImagenUrl = "HOODIE.jpg",
                            Nombre = "HOODIE BLANCO ADDRIPS",
                            Precio = 15000m,
                            Stock = 15,
                            Talle = "M, L, XL"
                        },
                        new
                        {
                            Id = 3,
                            ImagenUrl = "BAGGY-2.jpg",
                            Nombre = "BAGGY HACK WASHED BLACK",
                            Precio = 92000m,
                            Stock = 10,
                            Talle = "S, M, L"
                        },
                        new
                        {
                            Id = 4,
                            ImagenUrl = "SWEATER.jpg",
                            Nombre = "SWEATER ATHLETIC INGLES",
                            Precio = 72000m,
                            Stock = 10,
                            Talle = "M, L"
                        },
                        new
                        {
                            Id = 5,
                            ImagenUrl = "JEAN.jpg",
                            Nombre = "JEAN ADDRIPS CELESTE",
                            Precio = 80000m,
                            Stock = 25,
                            Talle = "S, M, L, XL"
                        },
                        new
                        {
                            Id = 6,
                            ImagenUrl = "BUZO.jpg",
                            Nombre = "BUZO TREKKER BLANCO",
                            Precio = 90000m,
                            Stock = 18,
                            Talle = "M, L, XL"
                        },
                        new
                        {
                            Id = 7,
                            ImagenUrl = "BAGGY-3.jpg",
                            Nombre = "BAGGY JAMES",
                            Precio = 85000m,
                            Stock = 22,
                            Talle = "S, M, L, XL"
                        },
                        new
                        {
                            Id = 8,
                            ImagenUrl = "BUZO-2.jpg",
                            Nombre = "BUZO POLAR NEGRO",
                            Precio = 76000m,
                            Stock = 12,
                            Talle = "S, M, L"
                        });
                });

            modelBuilder.Entity("servidor.Modelos.ItemCompra", b =>
                {
                    b.HasOne("servidor.Modelos.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servidor.Modelos.Producto", "Producto")
                        .WithMany("ItemsCompra")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("servidor.Modelos.Compra", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("servidor.Modelos.Producto", b =>
                {
                    b.Navigation("ItemsCompra");
                });
#pragma warning restore 612, 618
        }
    }
}
