@namespace Cliente.Layout
@using Cliente.Services
@inject CarritoService CarritoSrv

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">
            <img src="img/logobat.jpg" alt="Logo" style="height: 120px; width: auto; margin: 10px auto; display: block;" />
        </a>

        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All" style="color: black;">
                <span class="bi bi-house-door-fill-nav-menu"></span> Productos
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link carrito-link" href="carrito" style="color: black;">
                <span class="bi bi-cart carrito-icon-sidebar"></span>
                <span class="carrito-text-sidebar">Carrito (@CarritoSrv.CantidadTotal)</span>
            </NavLink>
        </div>

    </nav>
</div>

@code
{
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        CarritoSrv.OnChange += StateHasChanged;
        await CarritoSrv.ActualizarCantidadAsync();
    }

    public void Dispose()
    {
        CarritoSrv.OnChange -= StateHasChanged;
    }
}
